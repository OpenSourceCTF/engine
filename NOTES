## TODO

++ speed up compilation time ++
    check for any places we can use forward declarations

remove players if they havent moved in X seconds
    unless they're by themselves

game_finished event (currently stub):
    maybe add which team won?
    any fun end of game only stats?
    send gamesync of next map
    send start_game event?

new_game event (map name) ??? ^^
    need to have players let game know they are ready
    should we just send gamesync?

vote player event
    has voting player_id, voted player_id, reason string
    players have N seconds to vote yes/no (in ui)
    TODO: check that players can only vote once
          disconnect player if voted more than N times
          add something to db

fix segfault on exit
fix crash on disconnect/reconnect (to reprod just run loadtest.js then kill it)
fix when maps in config is just `maps=maps/Head.json` server stops working
fix server should exit if any ports not available

store player stats
    ideally we can support more than tagpro did
    probably by storing the stats with more detail
    ...
    total distance travelled?
    average speed?
    ...
    check todos

request player stats event

neutral flag mode:
    add flag_transferred event
    add game type
    add transfer method

---

run these to look for bugs

`grep -r "todo" src`
`grep -r "fixme" src`

### ploff

chain vertices are shared_ptr - look at
get the good config values
return flag properly
explosions persist after pop?
toggles render incorrectly


## NETWORK
client connects to lobby
selects game it wants to join
loads map from webserver over http
    (ensure maps are gzipped (if using nginx this is easy))

client says gamesync with login_token (so server can get user_id, name, degrees)
    server checks user and gets name, degrees, etc
    server responds with current state of map (all positions, players, etc)
    server adds clients ball (respawn)
    server notifies all clients of new ball

---

in future we plan for move to webrtc

---

look in the `./tests` folder for examples

## BUILD

itd be nice if the libraries were just in a folder and built correctly as part of makefile
maybe with subrepositories?

