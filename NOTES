## TODO

add timers (respawn, boosters, bombs, powerups)
make toggles not dependent on static map
make portals disable each other when transporting
make boosters turn off after boosting
make bombs turn off after blowing up
make bombs push players
make powerups
make powerups have effects
track flag ownership and scoring
add game end conditions (time, score)
make gates kill players
serialize map data for server sync
handle websocket movement input
    (will require an action queue)
send map deltas for server
    (will require a queue for updates)


## NETWORK

(idea of how network will work)
(current code very "exploratory" (read shitty))

start server-->

load list of maps in maplist.txt
    ensure all exist in folder

connect to database

lobby server starts
    starts X games
        2 threads - 1 for network, 1 for gameloop

(bootup is now complete)

client connects to lobby
    selects game it wants to join
        loads map from webserver over http
            (ensure maps are gzipped (if using nginx this is easy))

client says ready with login_token (so server can get user_id, name, degrees)
    server checks user and gets name, degrees, etc
    server responds with current state of map (all positions, players, etc)
    server adds clients ball (respawn)
    server notifies all clients of new ball

--

in future we plan for move to webrtc

## MAP

seems like everything is slightly.. offset?

## ENGINE

objects need to use unique_ptr or shared_ptr rather than raw ptrs
for now im just using raw since its faster to dev
but its unsafe and will be best to switch over at least when game basically works..

## BUILD

itd be nice if the libraries were just in a folder and built correctly as part of makefile
maybe with subrepositories?

make it easy to switch between debug and release mode in makefile

improve dependencies in makefile + general cleanup
